import{_ as o,r as p,o as l,c,b as n,e,a as t,d as s}from"./app.15edff22.js";const i={},r=t(`<h1 id="es2015-es2022\u65B0\u7279\u6027\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#es2015-es2022\u65B0\u7279\u6027\u603B\u7ED3" aria-hidden="true">#</a> ES2015-ES2022\u65B0\u7279\u6027\u603B\u7ED3</h1><blockquote><p>\u4EFB\u4F55\u4EBA\u90FD\u53EF\u4EE5\u5411\u6807\u51C6\u59D4\u5458\u4F1A\uFF08\u53C8\u79F0 TC39 \u59D4\u5458\u4F1A\uFF09\u63D0\u6848\uFF0C\u8981\u6C42\u4FEE\u6539\u8BED\u8A00\u6807\u51C6\u3002<br> \u4E00\u79CD\u65B0\u7684\u8BED\u6CD5\u4ECE\u63D0\u6848\u5230\u53D8\u6210\u6B63\u5F0F\u6807\u51C6\uFF0C\u9700\u8981\u7ECF\u5386\u4E94\u4E2A\u9636\u6BB5\u3002\u6BCF\u4E2A\u9636\u6BB5\u7684\u53D8\u52A8\u90FD\u9700\u8981\u7531 TC39 \u59D4\u5458\u4F1A\u6279\u51C6\u3002--\u300A\u6458\u81EAECMAScript6\u5165\u95E8\u300B</p></blockquote><ul><li>Stage 0 - Strawman\uFF08\u5C55\u793A\u9636\u6BB5\uFF09</li><li>Stage 1 - Proposal\uFF08\u5F81\u6C42\u610F\u89C1\u9636\u6BB5\uFF09</li><li>Stage 2 - Draft\uFF08\u8349\u6848\u9636\u6BB5\uFF09</li><li>Stage 3 - Candidate\uFF08\u5019\u9009\u4EBA\u9636\u6BB5\uFF09</li><li>Stage 4 - Finished\uFF08\u5B9A\u6848\u9636\u6BB5\uFF09</li></ul><h2 id="stage4-\u5B8C\u6210\u9636\u6BB5" tabindex="-1"><a class="header-anchor" href="#stage4-\u5B8C\u6210\u9636\u6BB5" aria-hidden="true">#</a> Stage4 \u5B8C\u6210\u9636\u6BB5</h2><h3 id="_2016" tabindex="-1"><a class="header-anchor" href="#_2016" aria-hidden="true">#</a> 2016</h3><ul><li><code>Array.prototype.include</code></li><li>\u5E42\u8FD0\u7B97\u7B26</li></ul><h3 id="_2017" tabindex="-1"><a class="header-anchor" href="#_2017" aria-hidden="true">#</a> 2017</h3><ul><li><code>Object.values/Object.entries</code></li><li>\u5B57\u7B26\u4E32\u586B\u5145 <ul><li><code>String.prototype.padStart</code></li><li><code>String.prototype.padEnd</code></li></ul></li><li><code>Object.getOwnPropertyDescriptors</code></li><li>\u51FD\u6570\u53C2\u6570\u5217\u8868\u548C\u8C03\u7528\u7684\u672B\u5C3E\u9017\u53F7</li><li>Async functions</li><li>\u5171\u4EAB\u5185\u5B58\u548C\u539F\u5B50\u9501</li></ul><h3 id="_2018" tabindex="-1"><a class="header-anchor" href="#_2018" aria-hidden="true">#</a> 2018</h3><ul><li>\u63D0\u5347\u6A21\u677F\u5B57\u9762\u91CF\u9650\u5236 \u4E3B\u8981\u9488\u5BF9\u6A21\u677F\u4E2D\u7684 <code>unicode</code> \u4E2D\u7684\u8F6C\u4E49\u5B57\u7B26\u3002</li><li>\u6B63\u5219\u8868\u8FBE\u5F0F s (dotAll) flag</li><li>\u6B63\u5219\u8868\u8FBE\u5F0F\uFF0C\u589E\u52A0\u5339\u914Dgroups\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> re <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?&lt;year&gt;\\d{4})-(?&lt;month&gt;\\d{2})-(?&lt;day&gt;\\d{2})</span><span class="token regex-delimiter">/</span><span class="token regex-flags">u</span></span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;2015-01-02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// result.groups.year === &#39;2015&#39;;</span>
<span class="token comment">// result.groups.month === &#39;01&#39;;</span>
<span class="token comment">// result.groups.day === &#39;02&#39;;</span>

<span class="token comment">// result[0] === &#39;2015-01-02&#39;;</span>
<span class="token comment">// result[1] === &#39;2015&#39;;</span>
<span class="token comment">// result[2] === &#39;01&#39;;</span>
<span class="token comment">// result[3] === &#39;02&#39;;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u89E3\u6784/\u8D4B\u503C\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token operator">...</span>z <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
x<span class="token punctuation">;</span> <span class="token comment">// 1</span>
y<span class="token punctuation">;</span> <span class="token comment">// 2</span>
z<span class="token punctuation">;</span> <span class="token comment">// { a: 3, b: 4 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token operator">...</span>z <span class="token punctuation">}</span><span class="token punctuation">;</span>
n<span class="token punctuation">;</span> <span class="token comment">// { x: 1, y: 2, a: 3, b: 4 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,14),u=n("li",null,[n("p",null,"\u6B63\u5219\u8868\u8FBE\u5F0F\uFF0C\u540E\u884C(Lookbehind)\u65AD\u8A00 ES5\u4E2D\uFF0C\u6B63\u5219\u53EA\u652F\u6301\u5148\u884C\u65AD\u8A00\uFF0CES2018\u4E2D\u52A0\u5165\u4E86\u540E\u884C\u65AD\u8A00\u7684\u652F\u6301\u3002 \u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u5148\u884C\u65AD\u8A00\u548C\u540E\u884C\u65AD\u8A00\u4E00\u5171\u67094\u79CD\u5F62\u5F0F\uFF1A"),n("ul",null,[n("li",null,"(?=pattern) \u96F6\u5BBD\u6B63\u5411\u5148\u884C\u65AD\u8A00(zero-width positive lookahead assertion)"),n("li",null,"(?!pattern) \u96F6\u5BBD\u8D1F\u5411\u5148\u884C\u65AD\u8A00(zero-width negative lookahead assertion)"),n("li",null,"(?<=pattern) \u96F6\u5BBD\u6B63\u5411\u540E\u884C\u65AD\u8A00(zero-width positive lookbehind assertion)"),n("li",null,"(?<!pattern) \u96F6\u5BBD\u8D1F\u5411\u540E\u884C\u65AD\u8A00(zero-width negative lookbehind assertion)")])],-1),d=n("li",null,[n("p",null,[n("code",null,"Promise.prototype.finally")])],-1),k={href:"https://github.com/tc39/proposal-async-iteration",target:"_blank",rel:"noopener noreferrer"},m=s("Async\u5F02\u6B65\u8FED\u4EE3"),v=n("h3",{id:"_2019",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2019","aria-hidden":"true"},"#"),s(" 2019")],-1),b=s("\u53EF\u9009\u7684"),h=n("code",null,"catch",-1),_=s("\u7ED1\u5B9A "),g={href:"https://github.com/tc39/proposal-optional-catch-binding",target:"_blank",rel:"noopener noreferrer"},f=s("\u67E5\u770B\u8BE6\u60C5"),y=t(`<p>\u4E4B\u524D\u7684<code>try...catch</code>\u662F\u4E00\u5B9A\u8981\u52A0error\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token comment">//...</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token operator">/</span><span class="token operator">...</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>
  <span class="token operator">/</span><span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>JSON\u8D85\u96C6</li><li><code>Symbol.prototype.description</code></li><li><code>Function.prototype.toString</code> \u4FEE\u6B63</li><li><code>Object.fromEntries</code></li><li><code>JSON.stringify</code> \u66F4\u597D\u7684\u683C\u5F0F\u5316</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">&#39;\u{1D306}&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u2192 &#39;&quot;\u{1D306}&quot;&#39;</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">&#39;\\uD834\\uDF06&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u2192 &#39;&quot;\u{1D306}&quot;&#39;</span>

<span class="token comment">// Unpaired surrogate code units will serialize to escape sequences.</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">&#39;\\uDF06\\uD834&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u2192 &#39;&quot;\\\\udf06\\\\ud834&quot;&#39;</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">&#39;\\uDEAD&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u2192 &#39;&quot;\\\\udead&quot;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>String.prototype.{trimStart,trimEnd}</code></li><li><code>Array.prototype.{flat,flatMap}</code></li></ul><h3 id="_2020" tabindex="-1"><a class="header-anchor" href="#_2020" aria-hidden="true">#</a> 2020</h3>`,8),x=n("li",null,[n("code",null,"String.prototype.matchAll")],-1),j=n("li",null,[n("code",null,"import()")],-1),w=n("li",null,[n("code",null,"BigInt"),s(" \u5927\u6574\u6570")],-1),S=n("li",null,[n("code",null,"Promise.allSettled")],-1),q=n("li",null,[n("code",null,"globalThis")],-1),O=s("\u6307\u5B9A "),A=n("code",null,"for-in",-1),E=s("\u679A\u4E3E\u987A\u5E8F "),I={href:"https://github.com/tc39/proposal-for-in-order",target:"_blank",rel:"noopener noreferrer"},N=s("\u67E5\u770B\u66F4\u591A"),z=s("\u53EF\u9009\u94FE "),C=n("code",null,"?.",-1),D=s(),P={href:"https://github.com/tc39/proposal-optional-chaining",target:"_blank",rel:"noopener noreferrer"},J=s("\u67E5\u770B\u66F4\u591A"),L=s("\u7A7A\u503C\u5408\u5E76 "),T=n("code",null,"??",-1),B={href:"https://github.com/tc39/proposal-nullish-coalescing",target:"_blank",rel:"noopener noreferrer"},F=s("\u67E5\u770B\u66F4\u591A"),M=n("code",null,[s("i"),n("wbr"),s("mport.meta")],-1),V=s(" \u5BFC\u5165\u5143\u6570\u636E "),Q={href:"https://github.com/tc39/proposal-import-meta",target:"_blank",rel:"noopener noreferrer"},$=s("\u67E5\u770B\u66F4\u591A"),R=n("h3",{id:"_2021",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2021","aria-hidden":"true"},"#"),s(" 2021")],-1),U=n("li",null,[n("code",null,"String.prototype.replaceAll")],-1),W=n("li",null,[n("code",null,"Promise.any")],-1),G=n("li",null,[n("code",null,"WeakRefs")],-1),H=s("\u903B\u8F91\u8D4B\u503C "),K={href:"https://github.com/tc39/proposal-logical-assignment",target:"_blank",rel:"noopener noreferrer"},X=s("\u67E5\u770B\u66F4\u591A"),Y=s(" \u7ED3\u5408\u903B\u8F91\u8FD0\u7B97\u7B26\u5408\u8D4B\u503C\u8FD0\u7B97\u7B26\u8FDB\u884C\u7B80\u5199\u3002"),Z=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// &quot;Or Or Equals&quot; (or, the Mallet operator :wink:)</span>
a <span class="token operator">||=</span> b<span class="token punctuation">;</span>
a <span class="token operator">||</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// &quot;And And Equals&quot;</span>
a <span class="token operator">&amp;&amp;=</span> b<span class="token punctuation">;</span>
a <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// &quot;QQ Equals&quot;</span>
a <span class="token operator">??=</span> b<span class="token punctuation">;</span>
a <span class="token operator">??</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token parameter">opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Setters are not needlessly called.</span>
  opts<span class="token punctuation">.</span>foo <span class="token operator">??=</span> <span class="token string">&#39;bar&#39;</span>

  <span class="token comment">// No repetition of \`opts.baz\`.</span>
  opts<span class="token punctuation">.</span>baz <span class="token operator">??=</span> <span class="token string">&#39;qux&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),nn=s("\u6570\u5B57\u5206\u5272\u7B26 "),sn={href:"https://github.com/tc39/proposal-numeric-separator",target:"_blank",rel:"noopener noreferrer"},an=s("\u67E5\u770B\u66F4\u591A"),en=s(" \u4F7F\u7528"),tn=n("code",null,"_",-1),on=s("\u5BF9\u5927\u6570\u8FDB\u884C\u5206\u5272\uFF0C\u65B9\u4FBF\u9605\u8BFB\u3002"),pn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">1_000_000_000</span>           <span class="token comment">// Ah, so a billion</span>
<span class="token number">101_475_938.38</span>          <span class="token comment">// And this is hundreds of millions</span>

<span class="token keyword">let</span> fee <span class="token operator">=</span> <span class="token number">123_00</span><span class="token punctuation">;</span>       <span class="token comment">// $123 (12300 cents, apparently)</span>
<span class="token keyword">let</span> fee <span class="token operator">=</span> <span class="token number">12_300</span><span class="token punctuation">;</span>       <span class="token comment">// $12,300 (woah, that fee!)</span>
<span class="token keyword">let</span> amount <span class="token operator">=</span> <span class="token number">12345_00</span><span class="token punctuation">;</span>  <span class="token comment">// 12,345 (1234500 cents, apparently)</span>
<span class="token keyword">let</span> amount <span class="token operator">=</span> <span class="token number">123_4500</span><span class="token punctuation">;</span>  <span class="token comment">// 123.45 (4-fixed financial)</span>
<span class="token keyword">let</span> amount <span class="token operator">=</span> <span class="token number">1_234_500</span><span class="token punctuation">;</span> <span class="token comment">// 1,234,500</span>

<span class="token number">0.000_001</span> <span class="token comment">// 1 millionth</span>
<span class="token number">1e10_000</span>  <span class="token comment">// 10^10000 -- granted, far less useful / in-range...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2022" tabindex="-1"><a class="header-anchor" href="#_2022" aria-hidden="true">#</a> 2022</h3>`,2),ln=n("li",null,[s("Class\u5B57\u6BB5 "),n("ul",null,[n("li",null,"\u79C1\u6709\u5B9E\u4F8B\u65B9\u6CD5\u548C\u8BBF\u95EE\u5668"),n("li",null,"Public \u5B9E\u4F8B\u5B57\u6BB5 \u548C Private \u5B9E\u4F8B\u5B57\u6BB5"),n("li",null,"\u9759\u6001\u5C5E\u6027 \u548C \u79C1\u6709\u9759\u6001\u5C5E\u6027")])],-1),cn=s("ECMAScript \u7684\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D\u7D22\u5F15 "),rn={href:"https://github.com/tc39/proposal-regexp-match-indices",target:"_blank",rel:"noopener noreferrer"},un=s("\u67E5\u770B\u66F4\u591A"),dn=n("code",null,"Top-level await",-1),kn=s(),mn={href:"https://github.com/tc39/proposal-top-level-await",target:"_blank",rel:"noopener noreferrer"},vn=s("\u67E5\u770B\u66F4\u591A"),bn=s(" \u4F7F\u7528"),hn=n("code",null,"await",-1),_n=s("\u65F6\uFF0C\u4E0D\u518D\u9700\u8981\u4E0E"),gn=n("code",null,"async",-1),fn=s("\u914D\u5957\u4F7F\u7528\u3002"),yn=n("li",null,[s("Class \u79C1\u6709\u5C5E\u6027"),n("code",null,"#private"),s("\u68C0\u67E5")],-1),xn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">C</span> <span class="token punctuation">{</span>
  #brand<span class="token punctuation">;</span>

  <span class="token function">#method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">get</span> <span class="token function">#getter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token function">isC</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> #brand <span class="token keyword">in</span> obj <span class="token operator">&amp;&amp;</span> #method <span class="token keyword">in</span> obj <span class="token operator">&amp;&amp;</span> #getter <span class="token keyword">in</span> obj<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),jn=n("code",null,".at()",-1),wn=s(),Sn={href:"https://github.com/tc39/proposal-relative-indexing-method",target:"_blank",rel:"noopener noreferrer"},qn=s("\u67E5\u770B\u66F4\u591A"),On=s(" \u5411\u6240\u6709\u57FA\u672C\u53EF\u7D22\u5F15\u7C7B\uFF08Array\u3001String\u3001TypedArray\uFF09\u6DFB\u52A0 .at() \u65B9\u6CD5"),An=n("li",null,[n("code",null,"Object.hasOwn()"),s(" \u63D0\u51FA\u4E00\u79CD\u66F4\u6613\u4E8E\u8BBF\u95EE\u7684"),n("code",null,"Object.hasOwn()"),s("\u65B9\u6CD5"),n("code",null,"Object.prototype.hasOwnProperty()"),s("\u3002")],-1),En=s("\u7C7B\u9759\u6001\u521D\u59CB\u5316\u5757 "),In={href:"https://github.com/tc39/proposal-class-static-block",target:"_blank",rel:"noopener noreferrer"},Nn=s("\u67E5\u770B\u66F4\u591A"),zn=n("li",null,"\u9519\u8BEF\u539F\u56E0",-1),Cn=s("\u4ECE\u6570\u7EC4\u672B\u5C3E\u5F00\u59CB\u67E5\u627E "),Dn={href:"https://github.com/tc39/proposal-array-find-from-last",target:"_blank",rel:"noopener noreferrer"},Pn=s("\u67E5\u770B\u66F4\u591A"),Jn=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

array<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span>value <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: 1 }</span>
array<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span>value <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>

<span class="token comment">// ======== Before the proposal =========== </span>

<span class="token comment">// find</span>
<span class="token punctuation">[</span><span class="token operator">...</span>array<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span>value <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: 3 }</span>

<span class="token comment">// findIndex</span>
array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">[</span><span class="token operator">...</span>array<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span>value <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">[</span><span class="token operator">...</span>array<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// should be -1, but 4</span>

<span class="token comment">// ======== In the proposal =========== </span>
<span class="token comment">// find</span>
array<span class="token punctuation">.</span><span class="token function">findLast</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span>value <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: 3 }</span>

<span class="token comment">// findIndex</span>
array<span class="token punctuation">.</span><span class="token function">findLastIndex</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span>value <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
array<span class="token punctuation">.</span><span class="token function">findLastIndex</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function Ln(Tn,Bn){const a=p("ExternalLinkIcon");return l(),c("div",null,[r,n("ul",null,[u,d,n("li",null,[n("p",null,[n("a",k,[m,e(a)])])])]),v,n("ul",null,[n("li",null,[b,h,_,n("a",g,[f,e(a)])])]),y,n("ul",null,[x,j,w,S,q,n("li",null,[O,A,E,n("a",I,[N,e(a)])]),n("li",null,[z,C,D,n("a",P,[J,e(a)])]),n("li",null,[L,T,n("a",B,[F,e(a)])]),n("li",null,[M,V,n("a",Q,[$,e(a)])])]),R,n("ul",null,[U,W,G,n("li",null,[H,n("a",K,[X,e(a)]),Y])]),Z,n("ul",null,[n("li",null,[nn,n("a",sn,[an,e(a)]),en,tn,on])]),pn,n("ul",null,[ln,n("li",null,[cn,n("a",rn,[un,e(a)])]),n("li",null,[dn,kn,n("a",mn,[vn,e(a)]),bn,hn,_n,gn,fn]),yn]),xn,n("ul",null,[n("li",null,[jn,wn,n("a",Sn,[qn,e(a)]),On]),An,n("li",null,[En,n("a",In,[Nn,e(a)])]),zn,n("li",null,[Cn,n("a",Dn,[Pn,e(a)])])]),Jn])}var Mn=o(i,[["render",Ln],["__file","es6+.html.vue"]]);export{Mn as default};
